{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/app-filters/app-filter-factory.ts","webpack:///./app/app-filters/sqlite-app-filter/index.ts","webpack:///./app/app-readers/app-reader-factory.ts","webpack:///./app/app-readers/file-app-reader/index.ts","webpack:///./app/app-readers/http-app-reader/index.ts","webpack:///./app/index.ts","webpack:///./app/role-readers/ldap-role-reader/index.ts","webpack:///./app/role-readers/role-reader-factory.ts","webpack:///./app/role-readers/sqlite-role-reader/index.ts","webpack:///./app/utils.ts","webpack:///./role-editor-ui/index.ts","webpack:///external \"comment-json\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"node-sspi\"","webpack:///external \"path\"","webpack:///external \"sqlite3\"","webpack:///external \"util\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/index.ts\");\n","import { AppFilter } from \"../types/app-filter-type\";\r\nimport { SQLiteAppFilter } from \"./sqlite-app-filter\";\r\n\r\nexport function appFilterFactory(type: string, config: any): AppFilter {\r\n  if (type === 'SQLite') {\r\n    return new SQLiteAppFilter(config);\r\n  }\r\n\r\n  throw new Error(`Unknown app filter type \"${type}\"`)\r\n}","import { AppFilter } from \"../../types/app-filter-type\";\r\nimport { FDC3AppConfig } from \"../../types/fdc3-app-config\";\r\nimport * as sqlite3 from 'sqlite3';\r\nimport * as path from 'path';\r\nimport { assetsDir } from \"../../utils\";\r\n\r\nconst sqlite = sqlite3.verbose();\r\n\r\nconst appsForRolesQuery = `SELECT roles.id, roles.name, GROUP_CONCAT('['||applications.id || ', \"' || applications.name || '\", \"' || applications.display_name || '\"]', ',') as apps\r\nfrom roles\r\nLEFT OUTER JOIN applications_for_role on applications_for_role.role_id = roles.id\r\nINNER JOIN applications on applications_for_role.application_id = applications.id\r\nWHERE roles.name IN ?\r\nGROUP BY roles.id`;\r\n\r\nclass SQLiteAppFilter implements AppFilter {\r\n  private db: sqlite3.Database;\r\n\r\n  constructor(config: any) {\r\n    this.db =  new sqlite.Database(path.join(assetsDir, config.db));\r\n  }\r\n\r\n  async filterApps(apps: FDC3AppConfig[], roles: string[]): Promise<FDC3AppConfig[]> {\r\n    const allowedAppsPerRole = await this.getAppsForRoles(roles)\r\n    return apps.filter(app => {\r\n      return allowedAppsPerRole.find(allowedApp => allowedApp.name === app.appId)\r\n    })\r\n  }\r\n\r\n  private getAppsForRoles(roles: Array<string>): Promise<Array<any>> {\r\n    return new Promise((res, rej) => {\r\n      let q = appsForRolesQuery.replace('?', `('${roles.join(\"', '\")}')`)\r\n      this.db.all(q, (err, rows) => {\r\n        if(err) {\r\n          rej(err)\r\n        } else {\r\n          let allApps: any = [];\r\n          rows.forEach(row => {\r\n            allApps = allApps.concat(JSON.parse(`[${row.apps}]`))\r\n          });\r\n\r\n          allApps = allApps.map((rawApp: any) => {\r\n            return {\r\n              name: rawApp[1],\r\n              title: rawApp[2]\r\n            }\r\n          });\r\n\r\n          res(allApps);\r\n        }\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  SQLiteAppFilter\r\n}","import { AppReader } from \"../types/app-reader-type\";\r\nimport { FileAppReader } from \"./file-app-reader\";\r\nimport { HttpAppReader } from \"./http-app-reader\";\r\n\r\nexport function appReaderFactory(type: string, config: any): AppReader {\r\n  if (type === 'file') {\r\n    return new FileAppReader(config);\r\n  } else if(type === 'url') {\r\n    return new HttpAppReader(config);\r\n  }\r\n\r\n  throw new Error(`Unknown app reader type \"${type}\"`)\r\n}","import { AppReader } from \"../../types/app-reader-type\";\r\nimport { FDC3AppConfig } from \"../../types/fdc3-app-config\";\r\nimport { readDir, readFile, configToManifest, assetsDir } from \"../../utils\";\r\nimport * as path from 'path';\r\nimport * as json from 'comment-json';\r\n\r\nclass FileAppReader implements AppReader {\r\n  private config: any;\r\n\r\n  constructor(config: any) {\r\n    this.config = config;\r\n  }\r\n\r\n  getApps(): Promise<FDC3AppConfig[]> {\r\n    return readDir(path.join(assetsDir, this.config.folder))\r\n      .then((files: any) => files.map((fileName: string) => readFile(path.join(assetsDir, this.config.folder, fileName), 'utf8').then(json.parse)))\r\n      .then((promises: Promise<any>[]) => Promise.all(promises))\r\n        .then((configs: any) => {\r\n            let appConfigs = configs.reduce((acc: any, cfg: any) => acc.concat(Array.isArray(cfg) ? cfg.map(configToManifest): configToManifest(cfg)), [])\r\n            return appConfigs\r\n        });\r\n  }\r\n}\r\n\r\nexport {\r\n  FileAppReader\r\n}","import { AppReader } from \"../../types/app-reader-type\";\r\nimport { FDC3AppConfig } from \"../../types/fdc3-app-config\";\r\n\r\nclass HttpAppReader implements AppReader {\r\n  constructor(config: any) {\r\n\r\n  }\r\n\r\n  getApps(): Promise<FDC3AppConfig[]> {\r\n    return new Promise((res, rej) => {\r\n      res();\r\n    })\r\n  }\r\n}\r\n\r\nexport {\r\n  HttpAppReader\r\n}","import * as express from 'express';\r\nimport * as path from 'path';\r\n\r\nimport * as json from 'comment-json';\r\nimport { readFile, assetsDir } from './utils';\r\nimport { appReaderFactory } from './app-readers/app-reader-factory';\r\nimport { appFilterFactory } from './app-filters/app-filter-factory';\r\nimport { roleReaderFactory } from './role-readers/role-reader-factory';\r\n// import { LDAPRoleReader } from './role-readers/ldap-role-reader';\r\nimport { UserInfo } from './types/role-reader-type';\r\nimport {RoleEditor} from '../role-editor-ui';\r\n\r\nconst app = express();\r\n\r\n// app.use((req,res, next) => {\r\n//     if (!req.headers.authorization) {\r\n//         sspiServer =  new t42NodeSSPI.NodeSSPIServer('Negotiate')\r\n//         console.log('First req');\r\n//         res.setHeader('www-authenticate', 'Negotiate');\r\n//         res.status(401)\r\n//         res.end();\r\n//     } else {\r\n//         let ct = Buffer.from(req.headers.authorization.split(' ')[1], 'base64')\r\n//         sspiServer.token(ct)\r\n//             .then(st => {\r\n//                 if (st.done) {\r\n//                     console.log('got challenge response');\r\n//                     req.connection['user'] = sspiServer.fqdn()\r\n//                     console.log(sspiServer);\r\n//                     debugger;\r\n//                     next();\r\n//                     return;\r\n//                 } else {\r\n//                     console.log('send challenge');\r\n//                     res.status(401);\r\n//                     res.setHeader('www-authenticate', 'Negotiate '+st.data.toString('base64'))\r\n//                     res.end();\r\n//                 }\r\n//             }).catch(err => {\r\n//                 console.log('error');\r\n//                 console.log(err);\r\n//             })\r\n//     }\r\n// })\r\n\r\napp.use(function (req, res, next) {\r\n    // console.log('req', req.headers);\r\n    var nodeSSPI = require('node-sspi')\r\n    var nodeSSPIObj = new nodeSSPI({\r\n        authoritative: true,\r\n        offerSSPI: true,\r\n        offerBasic: false,\r\n        retrieveGroups: true,\r\n        sspiPackagesUsed: ['Negotiate']\r\n    })\r\n    nodeSSPIObj.authenticate(req, res, function (err) {\r\n        res.finished || next()\r\n    })\r\n})\r\n\r\napp.get('/', (req, res,next) =>{\r\n    console.log(req.connection['user']);\r\n    console.log(req.connection['userGroups']);\r\n    res.end('bla');\r\n})\r\nreadFile(path.resolve(assetsDir, 'app-config.json'), 'utf8').then(json.parse)\r\n    .then((config) => {\r\n        const port = config.server.port || 3000;\r\n        // console.log(JSON.stringify(config, null, 2));\r\n        let roleEditor = new RoleEditor(config.appFilter.config, assetsDir);\r\n        roleEditor.start();\r\n\r\n\r\n        const appReader = appReaderFactory(config.appReader.type, config.appReader.config);\r\n        const roleReader = roleReaderFactory(config.roleReader.type, config.roleReader.config);\r\n        const appFilter = appFilterFactory(config.appFilter.type, config.appFilter.config);\r\n\r\n        // console.log(roleReader instanceof LDAPRoleReader);\r\n\r\n\r\n        app.get('/appd/v1/apps/search', async (req: any, res: any, next: any) => {\r\n            // let username = req.header('impersonated_user') || req.header('user');\r\n            let userInfo: UserInfo = {\r\n                user: req.connection['user'],\r\n                groups: req.connection['userGroups']\r\n            }\r\n\r\n            const allApps = await appReader.getApps();\r\n            console.log('all apps', allApps.length)\r\n\r\n            const userRoles = await roleReader.getRolesForUser(userInfo);\r\n            console.log('user roles', userRoles);\r\n\r\n            const filteredApps = await appFilter.filterApps(allApps, userRoles);\r\n            console.log('filtered apps', filteredApps.length);\r\n\r\n            res.setHeader('Content-Type', 'application/json');\r\n            res.end(JSON.stringify({applications: filteredApps}));\r\n        });\r\n\r\n        app.listen(port, () => {\r\n            return console.log(`Glue42 demo AppD server listening on ${port}.`)\r\n        });\r\n    }).catch(err => {\r\n        console.error(err);\r\n    })\r\n\r\n    // app.use(expressAuthNegotiate())\r\n    // app.use((req, res, next) => {\r\n    //     console.log(req['auth'].token);\r\n    //     console.log(kerberos);\r\n\r\n    //     Ssip.SecurityCredentials.acquire(\"Negotiate\", \"\", function(err, security_credentials) {\r\n    //         console.log(err, security_credentials);\r\n    //         Ssip.SecurityContext.initialize(security_credentials, \"HTTP/\", \"\", function(err, security_context) {\r\n    //             console.log(security_context);\r\n    //         });\r\n    //     })\r\n\r\n    //     next();\r\n    // })\r\n\r\n\r\n\r\n// function fetchConfigurations(username: string) {\r\n//     console.log(`fetching configurations for ${username}`);\r\n\r\n//     // return readDir(configurationFolder)\r\n//     //     .then((files: any) => files.map((fileName: string) => readFile(path.join(configurationFolder, fileName), 'utf8').then(json.parse)))\r\n//     //     .then((promises: Promise<any>[]) => Promise.all(promises))\r\n//     //     .then((configs: any) => {\r\n//     //         let appConfigs = configs.reduce((acc: any, cfg: any) => acc.concat(Array.isArray(cfg) ? cfg.map(configToManifest): configToManifest(cfg)), [])\r\n//     //         console.log(appConfigs);\r\n//     //         return appConfigs\r\n//     //     });\r\n\r\n// }\r\n\r\n","import { RoleReader, UserInfo } from \"../../types/role-reader-type\";\r\n// import * as ActiveDirectory from 'activedirectory';\r\n\r\nexport class LDAPRoleReader implements RoleReader {\r\n  // private ad: any;\r\n\r\n  constructor(config: any) {\r\n    // const ldapConfig = {\r\n    //   url: 'ldap://dc02.pirinsoft.bg',\r\n    //   baseDN: 'dc=pirinsoft,dc=bg',\r\n    //   username: 'aatanasov@pirinsoft.bg',\r\n    //   password: [80, 97, 114, 111, 108, 97, 49, 33].map(code => String.fromCharCode(code)).join('')\r\n    // }\r\n\r\n    // this.ad =  new ActiveDirectory(ldapConfig.url, ldapConfig.baseDN, ldapConfig.username, ldapConfig.password, {});\r\n  }\r\n\r\n  getRolesForUser(userInfo: UserInfo): Promise<string[]> {\r\n    return new Promise((res, rej) => {\r\n      res(userInfo.groups);\r\n      // this.ad.getGroupMembershipForUser(username, (err, groups) => {\r\n      //   if (err) {\r\n      //     rej(err);\r\n      //   } else {\r\n      //     if (Array.isArray(groups)) {\r\n      //       res(groups.map((g) => g.cn))\r\n      //     } else {\r\n      //       res([]);\r\n      //     }\r\n      //   }\r\n      // })\r\n    })\r\n  }\r\n}","import { RoleReader } from \"../types/role-reader-type\";\r\nimport { SQLiteRoleReader } from \"./sqlite-role-reader\";\r\nimport {LDAPRoleReader} from './ldap-role-reader';\r\n\r\nexport function roleReaderFactory(type: string, config: any): RoleReader {\r\n  if (type === 'SQLite') {\r\n    return new SQLiteRoleReader(config);\r\n  } else if (type === 'ActiveDirectory') {\r\n    return new LDAPRoleReader(config);\r\n  } else {\r\n    throw new Error('Invalid RoleReader type: ' + type);\r\n  }\r\n}","import { RoleReader } from \"../../types/role-reader-type\";\r\nimport * as sqlite3 from \"sqlite3\";\r\nimport * as path from 'path';\r\nimport { assetsDir } from \"../../utils\";\r\n\r\nconst sqlite = sqlite3.verbose();\r\n\r\nconst rolesForUserQuery = `Select users.id, users.username, GROUP_CONCAT('[' || roles.id || ',\"' || roles.name || '\"]') as roles\r\nfrom users\r\nLEFT OUTER JOIN user_roles on users.id = user_roles.user_id\r\nINNER JOIN roles on user_roles.role_id = roles.id\r\nwhere users.username = $username\r\ngroup by users.id`;\r\n\r\nexport class SQLiteRoleReader implements RoleReader {\r\n  private db: sqlite3.Database;\r\n\r\n  constructor(config: any) {\r\n    this.db =  new sqlite.Database(path.join(assetsDir, config.db));\r\n  }\r\n\r\n  getRolesForUser(userInfo: {user: string, groups: string[]}): Promise<string[]> {\r\n    return new Promise((res, rej) => {\r\n\r\n      this.db.get(rolesForUserQuery, {$username: userInfo.user}, (err, row) => {\r\n        if (err) {\r\n          rej(err);\r\n        } else {\r\n          if (row) {\r\n            let roles = JSON.parse(`[${row.roles}]`).map((role: Array<any>) => role[1]);\r\n            res(roles)\r\n          } else {\r\n            res([]);\r\n          }\r\n        }\r\n      });\r\n    })\r\n  }\r\n}","import {ApplicationConfig as GlueAppConfig} from 'tick42-glue-desktop-schemas';\r\nimport { FDC3AppConfig } from './types/fdc3-app-config';\r\nimport * as fs from 'fs';\r\nimport * as util from 'util';\r\nimport * as path from 'path';\r\n\r\nconst readDir = util.promisify(fs.readdir);\r\nconst readFile = util.promisify(fs.readFile);\r\n\r\nconst isDev = !!process.env.dev;\r\nconst assetsDir = isDev ? path.join(__dirname, '../assets') : path.join(process.cwd(), 'assets');\r\n\r\nconst configToManifest = (config: GlueAppConfig): FDC3AppConfig => {\r\n  return {\r\n    appId: config.name,\r\n    name: config.name,\r\n    version: \"1\",\r\n    title: config.title,\r\n    manifestType: \"Glue42\",\r\n    manifest: JSON.stringify(config)\r\n  }\r\n}\r\n\r\nexport {\r\n  configToManifest,\r\n  readDir,\r\n  readFile,\r\n  assetsDir,\r\n  isDev\r\n}","// import * as http from 'http';\r\nimport * as express from 'express';\r\nimport * as sqlite3 from \"sqlite3\";\r\nimport * as path from 'path';\r\n\r\nconst sqlite = sqlite3.verbose();\r\n\r\nexport class RoleEditor {\r\n  private db: sqlite3.Database;\r\n  private expressApp: any;\r\n\r\n\r\n  constructor(config, assetsDir) {\r\n    // console.log();\r\n    console.log(path.join(assetsDir, config.db));\r\n    this.db = new sqlite.Database(path.join(assetsDir, config.db))\r\n    console.log(this.db);\r\n    this.startServer();\r\n  }\r\n\r\n  start() {\r\n\r\n  }\r\n\r\n  private startServer() {\r\n    this.expressApp = express();\r\n    this.expressApp.use(express.static(path.join(process.cwd(), __dirname, 'public')));\r\n    this.expressApp.use(express.json());\r\n\r\n    console.log(__dirname);\r\n\r\n    this.registerEndPoints();\r\n    this.expressApp.listen(3001)\r\n  }\r\n\r\n  private registerEndPoints() {\r\n    this.expressApp.get('/users', this.getUsers.bind(this))\r\n    this.expressApp.get('/roles', this.getRoles.bind(this))\r\n    this.expressApp.put('/add-role', this.addRole.bind(this));\r\n    this.expressApp.put('/remove-role', this.removeRole.bind(this));\r\n    console.log(path.join(process.cwd(), __dirname, './public/index.html'))\r\n    // this.expressApp.get('/*', (req, res) => {\r\n    //   res.sendFile(path.join(process.cwd(), __dirname, './public/index.html'));\r\n    // })\r\n  }\r\n\r\n  private getUsers(req, res) {\r\n    this.db.all(usersQuery, (err, users) => {\r\n      console.log(users);\r\n      let grouped = users.reduce((acc, curr) => {\r\n        acc[curr.userName] = acc[curr.userName] || {id: curr.userId, name: curr.userName, roles:[]};\r\n        acc[curr.userName].roles.push(curr.roleName);\r\n        return acc;\r\n      }, {});\r\n\r\n      res.json(Object.keys(grouped).map(userName => grouped[userName]));\r\n    })\r\n\r\n  }\r\n\r\n  private getRoles(req, res) {\r\n    console.log('get roles');\r\n    this.db.all(rolesQuery, (err, roles) => {\r\n      res.json(roles);\r\n    })\r\n  }\r\n\r\n  private addRole(req, res) {\r\n    let {userId, roleId} = req.body;\r\n    console.log(userId, roleId);\r\n\r\n    if (typeof userId !== 'number' || typeof roleId !== 'number') {\r\n      res.status(400);\r\n      res.json('Invalid input data');\r\n    }\r\n\r\n    let addUserRoleQuery = `\r\n    INSERT INTO user_roles\r\n    VALUES (${userId}, ${roleId})`;\r\n    this.db.run(addUserRoleQuery,(err, result) => {\r\n      if(err) {\r\n        res.status(400);\r\n        res.json(err);\r\n      } else {\r\n        res.json(result);\r\n      }\r\n    })\r\n  }\r\n\r\n  private removeRole(req, res) {\r\n    let {userId, roleId} = req.body;\r\n    if (typeof userId !== 'number' || typeof roleId !== 'number') {\r\n      res.status(400);\r\n      res.json('Invalid input data');\r\n    }\r\n\r\n    let removeUserRoleQuery = `\r\n    DELETE FROM user_roles\r\n    WHERE user_id=${userId} AND role_id=${roleId}`;\r\n    this.db.run(removeUserRoleQuery, (err, result) => {\r\n      if(err) {\r\n        res.status(400);\r\n        res.json(err);\r\n      } else {\r\n        res.json(result);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\nconst usersQuery = `SELECT users.id as userId, users.username as userName, roles.name as roleName, roles.id as roleId\r\nFROM users\r\nLEFT OUTER JOIN user_roles ON user_roles.user_id = users.id\r\nINNER JOIN roles on user_roles.role_id = roles.id`;\r\n\r\nconst rolesQuery = `SELECT * from roles`;","module.exports = require(\"comment-json\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"node-sspi\");","module.exports = require(\"path\");","module.exports = require(\"sqlite3\");","module.exports = require(\"util\");"],"sourceRoot":""}